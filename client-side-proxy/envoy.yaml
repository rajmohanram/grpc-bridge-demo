admin:
  access_log:
  - name: envoy.access_loggers.file
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

# Control logging levels
layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        logging:
          level: info  # Change from debug to info/warn/error

# Overload manager for production-grade resource protection
overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.global_downstream_max_connections"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
      max_active_downstream_connections: 5000
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.global_downstream_max_connections"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.global_downstream_max_connections"
      threshold:
        value: 0.98

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8443 }
    # Performance optimizations for high-throughput scenarios
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    per_connection_buffer_limit_bytes: 32768
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: HTTP2
          # Performance and buffer optimizations
          request_timeout: 300s
          request_headers_timeout: 10s
          stream_idle_timeout: 300s
          drain_timeout: 10s
          delayed_close_timeout: 1s
          # Buffer settings for high throughput
          max_request_headers_kb: 96
          # Enhanced gRPC-specific HTTP/2 settings for production performance
          http2_protocol_options:
            max_concurrent_streams: 1000
            initial_stream_window_size: 1048576    # 1MB
            initial_connection_window_size: 8388608 # 8MB
            max_outbound_frames: 10000
            max_outbound_control_frames: 1000
            max_consecutive_inbound_frames_with_empty_payload: 1
            max_inbound_priority_frames_per_stream: 100
            max_inbound_window_update_frames_per_data_frame_sent: 10
            allow_connect: true
            allow_metadata: true
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              log_format:
                text_format_source:
                  inline_string: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n"
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: waf_service
                  timeout: 60s
                  # gRPC-specific timeout configurations
                  max_stream_duration:
                    max_stream_duration: 300s
                    grpc_timeout_header_max: 300s
                  # Enhanced retry policy for production resilience
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure,refused-stream,cancelled,deadline-exceeded,resource-exhausted"
                    num_retries: 3
                    per_try_timeout: 30s
                    per_try_idle_timeout: 5s
                    retry_back_off:
                      base_interval: 0.25s
                      max_interval: 10s
                    retry_host_predicate:
                    - name: envoy.retry_host_predicates.previous_hosts
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                    host_selection_retry_max_attempts: 5
          http_filters:
          # Add gRPC to HTTP/1.1 reverse bridge filter for protocol conversion to WAF
          - name: envoy.filters.http.grpc_http1_reverse_bridge
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig
              content_type: application/grpc+proto
              withhold_grpc_frames: false
          # Add gRPC-specific filters for better handling
          - name: envoy.filters.http.grpc_stats
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
              emit_filter_state: true
              stats_for_all_methods: true
          # CORS filter for cross-origin requests if needed
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/etc/envoy/certs/server.crt"
                private_key:
                  filename: "/etc/envoy/certs/server.key"
            validation_context:
              trusted_ca:
                filename: "/etc/envoy/certs/ca.crt"

  clusters:
  - name: waf_service
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    # Enhanced connection pool settings for production
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 300
        keepalive_interval: 30
    # Circuit breaker configuration for resilience
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 1000
        max_pending_requests: 1000
        max_requests: 1000
        max_retries: 3
        retry_budget:
          budget_percent:
            value: 25.0
          min_retry_concurrency: 3
    # Health checking for proactive failure detection
    health_checks:
    - timeout: 5s
      interval: 10s
      interval_jitter: 1s
      unhealthy_threshold: 3
      healthy_threshold: 2
      tcp_health_check: {}
      no_traffic_interval: 60s
    # Outlier detection for automatic endpoint management
    outlier_detection:
      consecutive_5xx: 3
      consecutive_gateway_failure: 3
      interval: 10s
      base_ejection_time: 30s
      max_ejection_percent: 50
      split_external_local_origin_errors: true
    # Optimized HTTP/1.1 configuration for upstream WAF
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http_protocol_options:
            allow_absolute_url: false
            accept_http_10: false
        # Enhanced HTTP/1.1 connection management
        common_http_protocol_options:
          idle_timeout: 60s
          max_connection_duration: 300s
          max_headers_count: 100
          max_stream_duration: 300s
          headers_with_underscores_action: ALLOW
          max_requests_per_connection: 1000
    load_assignment:
      cluster_name: waf_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: waf
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: waf
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/envoy/certs/ca.crt"
